{"ast":null,"code":"var _jsxFileName = \"/Users/thuluu/Desktop/CSCI1300/development-project/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport plantData from \"./assets/plant-data.json\";\nimport PlantItem from \"./components/plantItem.js\";\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nplantData.forEach(item => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  _s();\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, setCart] = useState([]);\n  const [plantGrid, setplantGrid] = useState(plantData);\n  const [count, setCount] = useState(0);\n  const [checkedSort, setCheckedSort] = useState(\"\");\n  const [checkedIndoor, setCheckedIndoor] = useState(\"\");\n  const [checkedOutdoor, setCheckedOutdoor] = useState(\"\");\n  const handleClick = (item, price) => {\n    setCart([...cart, item]);\n    setCount(count + price);\n  };\n  const handleSort = () => {\n    if (checkedSort === \"\") {\n      setCheckedSort(\"checked\");\n      let newcart = plantGrid.sort((a, b) => a.price - b.price);\n      setplantGrid(newcart);\n    } else {\n      setCheckedSort(\"\");\n      let newcart = plantGrid.sort((a, b) => a.id - b.id);\n      setplantGrid(newcart);\n    }\n  };\n  const handleIndoor = () => {\n    if (checkedIndoor === \"\") {\n      setCheckedIndoor(\"checked\");\n      let newcart = plantGrid.filter(x => x.sunlight < 5);\n      setplantGrid(newcart);\n    } else {\n      setCheckedIndoor(\"\");\n      let newcart = plantData;\n      if (checkedOutdoor === \"checked\") {\n        newcart = plantData.filter(x => x.sunlight >= 5);\n      }\n      if (checkedSort === \"checked\") {\n        newcart = newcart.sort((a, b) => a.price - b.price);\n      }\n      setplantGrid(newcart);\n    }\n  };\n  const handleOutdoor = () => {\n    if (checkedOutdoor === \"\") {\n      setCheckedOutdoor(\"checked\");\n      let newcart = plantGrid.filter(x => x.sunlight >= 5);\n      setplantGrid(newcart);\n    } else {\n      setCheckedOutdoor(\"\");\n      let newcart = plantData;\n      if (checkedIndoor === \"checked\") {\n        newcart = plantData.filter(x => x.sunlight < 5);\n      }\n      if (checkedSort === \"checked\") {\n        newcart = newcart.sort((a, b) => a.price - b.price);\n      }\n      setplantGrid(newcart);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Plant Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [\" \", plantGrid.map((item, index) =>\n        /*#__PURE__*/\n        // TODO: map plantData to plantItem components iterates through the data and does something\n        // <p>Bakery Item {index}</p> // replace with plantItem component\n        _jsxDEV(PlantItem, {\n          className: \"card\",\n          image: item.image,\n          name: item.name,\n          sunlight: item.sunlight,\n          price: item.price,\n          handleClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sort price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedSort,\n            onChange: handleSort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), \"lowest to high\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedIndoor,\n            onChange: handleIndoor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), \"Indoor Plants\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedOutdoor,\n            onChange: handleOutdoor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), \"Outdoor Plants\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Total Price: \", count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setCart(cart.filter((item, itemIndex) => itemIndex != index));\n                setCount(count - plantData.find(x => x.name === item).price);\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n/* \n*/\n_s(App, \"dJ4v/XVXhp7AHirPXKBGdGNSfos=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","plantData","PlantItem","forEach","item","image","process","env","PUBLIC_URL","App","cart","setCart","plantGrid","setplantGrid","count","setCount","checkedSort","setCheckedSort","checkedIndoor","setCheckedIndoor","checkedOutdoor","setCheckedOutdoor","handleClick","price","handleSort","newcart","sort","a","b","id","handleIndoor","filter","x","sunlight","handleOutdoor","map","index","name","itemIndex","find"],"sources":["/Users/thuluu/Desktop/CSCI1300/development-project/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport plantData from \"./assets/plant-data.json\";\nimport PlantItem from \"./components/plantItem.js\"\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nplantData.forEach((item) => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n  const [cart, setCart] = useState([]);\n  const [plantGrid, setplantGrid] = useState(plantData);\n  const [count, setCount] = useState(0);\n  const [checkedSort, setCheckedSort] = useState(\"\");\n  const [checkedIndoor, setCheckedIndoor] = useState(\"\");\n  const [checkedOutdoor, setCheckedOutdoor] = useState(\"\");\n\n  const handleClick = (item, price) => {\n    setCart([...cart, item])\n    setCount(count + price)\n  }\n\n  const handleSort = () => {\n    if (checkedSort === \"\") {\n      setCheckedSort(\"checked\");\n      let newcart = plantGrid.sort((a, b) => (a.price - b.price))\n      setplantGrid(newcart);\n    } else {\n      setCheckedSort(\"\");\n      let newcart = plantGrid.sort((a, b) => (a.id - b.id))\n      setplantGrid(newcart);\n    }\n  }\n\n  const handleIndoor = () => {\n    if (checkedIndoor === \"\") {\n      setCheckedIndoor(\"checked\");\n      let newcart = plantGrid.filter(x => x.sunlight < 5)\n      setplantGrid(newcart);\n    } else {\n\n      setCheckedIndoor(\"\");\n      let newcart = plantData\n      if (checkedOutdoor === \"checked\") {\n        newcart = plantData.filter(x => x.sunlight >= 5)\n      }\n      if (checkedSort === \"checked\") {\n        newcart = newcart.sort((a, b) => (a.price - b.price))\n      }\n      setplantGrid(newcart);\n    }\n  }\n\n  const handleOutdoor = () => {\n    if (checkedOutdoor === \"\") {\n      setCheckedOutdoor(\"checked\");\n      let newcart = plantGrid.filter(x => x.sunlight >= 5)\n      setplantGrid(newcart);\n    } else {\n      setCheckedOutdoor(\"\");\n      let newcart = plantData\n      if (checkedIndoor === \"checked\") {\n        newcart = plantData.filter(x => x.sunlight < 5)\n      }\n      if (checkedSort === \"checked\") {\n        newcart = newcart.sort((a, b) => (a.price - b.price))\n      }\n      setplantGrid(newcart);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>The Plant Shop</h1> {/* TODO: personalize your bakery (if you want) */}\n      <div className=\"container\">\n\n        <div className=\"content\"> {/* class name */}\n          {/* sort by price */}\n\n\n          {plantGrid.map((item, index) => ( // TODO: map plantData to plantItem components iterates through the data and does something\n            // <p>Bakery Item {index}</p> // replace with plantItem component\n            <PlantItem className=\"card\" image={item.image} name={item.name} sunlight={item.sunlight} price={item.price} handleClick={handleClick} />\n          ))}\n        </div>\n\n        <div className=\"sidebar\">\n          <h3>Sort price:</h3>\n          <p>\n            <input type=\"checkbox\" checked={checkedSort} onChange={handleSort} />\n            <span class=\"checkmark\"></span>\n            lowest to high\n          </p>\n\n          <h3>Filters:</h3>\n          <p>\n            <input type=\"checkbox\" checked={checkedIndoor} onChange={handleIndoor} />\n            <span class=\"checkmark\"></span>\n            Indoor Plants\n          </p>\n          <p>\n            <input type=\"checkbox\" checked={checkedOutdoor} onChange={handleOutdoor} />\n            <span class=\"checkmark\"></span>\n            Outdoor Plants\n          </p>\n\n          <h3>Cart</h3>\n          <h3>Total Price: {count}</h3>\n          <p>{cart.map((item, index) => (<p>{item} <button onClick={() => { setCart(cart.filter((item, itemIndex) => itemIndex != index)); setCount(count - plantData.find(x => x.name === item).price) }}>X</button></p>))}</p>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n/* \n*/\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAOC,SAAS,MAAM,2BAA2B;;AAEjD;AAAA;AACAD,SAAS,CAACE,OAAO,CAAEC,IAAI,IAAK;EAC1BA,IAAI,CAACC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,GAAGJ,IAAI,CAACC,KAAK;AACxD,CAAC,CAAC;AACF;;AAEA,SAASI,GAAG,GAAG;EAAA;EACb;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACE,SAAS,CAAC;EACrD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMuB,WAAW,GAAG,CAAClB,IAAI,EAAEmB,KAAK,KAAK;IACnCZ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEN,IAAI,CAAC,CAAC;IACxBW,QAAQ,CAACD,KAAK,GAAGS,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,UAAU,GAAG,MAAM;IACvB,IAAIR,WAAW,KAAK,EAAE,EAAE;MACtBC,cAAc,CAAC,SAAS,CAAC;MACzB,IAAIQ,OAAO,GAAGb,SAAS,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACJ,KAAK,GAAGK,CAAC,CAACL,KAAM,CAAC;MAC3DV,YAAY,CAACY,OAAO,CAAC;IACvB,CAAC,MAAM;MACLR,cAAc,CAAC,EAAE,CAAC;MAClB,IAAIQ,OAAO,GAAGb,SAAS,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAG,CAAC;MACrDhB,YAAY,CAACY,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAMK,YAAY,GAAG,MAAM;IACzB,IAAIZ,aAAa,KAAK,EAAE,EAAE;MACxBC,gBAAgB,CAAC,SAAS,CAAC;MAC3B,IAAIM,OAAO,GAAGb,SAAS,CAACmB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,CAAC,CAAC;MACnDpB,YAAY,CAACY,OAAO,CAAC;IACvB,CAAC,MAAM;MAELN,gBAAgB,CAAC,EAAE,CAAC;MACpB,IAAIM,OAAO,GAAGxB,SAAS;MACvB,IAAImB,cAAc,KAAK,SAAS,EAAE;QAChCK,OAAO,GAAGxB,SAAS,CAAC8B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,IAAI,CAAC,CAAC;MAClD;MACA,IAAIjB,WAAW,KAAK,SAAS,EAAE;QAC7BS,OAAO,GAAGA,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACJ,KAAK,GAAGK,CAAC,CAACL,KAAM,CAAC;MACvD;MACAV,YAAY,CAACY,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAMS,aAAa,GAAG,MAAM;IAC1B,IAAId,cAAc,KAAK,EAAE,EAAE;MACzBC,iBAAiB,CAAC,SAAS,CAAC;MAC5B,IAAII,OAAO,GAAGb,SAAS,CAACmB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,IAAI,CAAC,CAAC;MACpDpB,YAAY,CAACY,OAAO,CAAC;IACvB,CAAC,MAAM;MACLJ,iBAAiB,CAAC,EAAE,CAAC;MACrB,IAAII,OAAO,GAAGxB,SAAS;MACvB,IAAIiB,aAAa,KAAK,SAAS,EAAE;QAC/BO,OAAO,GAAGxB,SAAS,CAAC8B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,CAAC,CAAC;MACjD;MACA,IAAIjB,WAAW,KAAK,SAAS,EAAE;QAC7BS,OAAO,GAAGA,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACJ,KAAK,GAAGK,CAAC,CAACL,KAAM,CAAC;MACvD;MACAV,YAAY,CAACY,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,oBACvB;MAAK,SAAS,EAAC,WAAW;MAAA,wBAExB;QAAK,SAAS,EAAC,SAAS;QAAA,gBAIrBb,SAAS,CAACuB,GAAG,CAAC,CAAC/B,IAAI,EAAEgC,KAAK;QAAA;QAAO;QAChC;QACA,QAAC,SAAS;UAAC,SAAS,EAAC,MAAM;UAAC,KAAK,EAAEhC,IAAI,CAACC,KAAM;UAAC,IAAI,EAAED,IAAI,CAACiC,IAAK;UAAC,QAAQ,EAAEjC,IAAI,CAAC6B,QAAS;UAAC,KAAK,EAAE7B,IAAI,CAACmB,KAAM;UAAC,WAAW,EAAED;QAAY;UAAA;UAAA;UAAA;QAAA,QACtI,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAC,SAAS;QAAA,wBACtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACpB;UAAA,wBACE;YAAO,IAAI,EAAC,UAAU;YAAC,OAAO,EAAEN,WAAY;YAAC,QAAQ,EAAEQ;UAAW;YAAA;YAAA;YAAA;UAAA,QAAG,eACrE;YAAM,KAAK,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAE7B,eAEJ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eACjB;UAAA,wBACE;YAAO,IAAI,EAAC,UAAU;YAAC,OAAO,EAAEN,aAAc;YAAC,QAAQ,EAAEY;UAAa;YAAA;YAAA;YAAA;UAAA,QAAG,eACzE;YAAM,KAAK,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAE7B,eACJ;UAAA,wBACE;YAAO,IAAI,EAAC,UAAU;YAAC,OAAO,EAAEV,cAAe;YAAC,QAAQ,EAAEc;UAAc;YAAA;YAAA;YAAA;UAAA,QAAG,eAC3E;YAAM,KAAK,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAE7B,eAEJ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eACb;UAAA,4BAAkBpB,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eAC7B;UAAA,UAAIJ,IAAI,CAACyB,GAAG,CAAC,CAAC/B,IAAI,EAAEgC,KAAK,kBAAM;YAAA,WAAIhC,IAAI,oBAAE;cAAQ,OAAO,EAAE,MAAM;gBAAEO,OAAO,CAACD,IAAI,CAACqB,MAAM,CAAC,CAAC3B,IAAI,EAAEkC,SAAS,KAAKA,SAAS,IAAIF,KAAK,CAAC,CAAC;gBAAErB,QAAQ,CAACD,KAAK,GAAGb,SAAS,CAACsC,IAAI,CAACP,CAAC,IAAIA,CAAC,CAACK,IAAI,KAAKjC,IAAI,CAAC,CAACmB,KAAK,CAAC;cAAC,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAW;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK;QAAC;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAClN;IAAA;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AACA;AACA;AADA,GA5GSd,GAAG;AAAA,KAAHA,GAAG;AA8GZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}